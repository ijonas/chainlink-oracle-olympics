apiVersion: v1
kind: Service
metadata:
  name: ethereum
  labels:
    app: ethereum
spec:
  clusterIP: None
  selector:
    app: ethereum
  ports:
    - name: listening
      port: 30303
      targetPort: 30303
      protocol: TCP
    - name: discovery
      port: 30303
      targetPort: 30303
      protocol: UDP
    - name: httprpc
      port: 8545
      targetPort: 8545
      protocol: TCP
    - name: websocket
      port: 8546
      targetPort: 8546
      protocol: TCP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ethereum
spec:
  selector:
    matchLabels:
      app: ethereum
  serviceName: ethereum
  replicas: 2
  template:
    metadata:
      labels:
        app: ethereum
        role: ethereum
        environment: production
    spec:
      containers:
        - name: ethereum
          image: ethereum/client-go:v1.10.16
          command: ["geth"]
          args: ["--rinkeby", "--ws",  "--ws.origins=*", "--ws.addr=0.0.0.0", "--http", "--http.addr=0.0.0.0", "--http.api=eth,net,web3,txpool", "--http.corsdomain=*.*.*.*", "--rpc.gascap=0", "--rpc.txfeecap=0"]
          ports:
            - containerPort: 30303
              protocol: TCP
            - containerPort: 30303
              protocol: UDP
            - containerPort: 8545
            - containerPort: 8546
          volumeMounts:
            - name: ethereum-data
              mountPath: /root
          resources:
            requests:
              cpu: 2000m
              memory: 8000Mi

  volumeClaimTemplates:
  - metadata:
      name: ethereum-data
      annotations:
        volume.beta.kubernetes.io/storage-class: "fast"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1000Gi
